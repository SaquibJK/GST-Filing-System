<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head', {title: "Excel Operations" }) %>
    <link rel="stylesheet" href="/css/file.css">
</head>


<body>
    <div class="form-container">
        <div class="form-group">
            <label for="select-option">Select Option:</label>
            <select id="select-option">
                <option value="columns">Columns</option>
                <option value="rows">Rows</option>
            </select>
        </div>

        <div class="form-group" id="column-select-container" style="display: none;">
            <label for="column-select">Select Column:</label>
            <select id="column-select">
                <% Object.keys(data[0]).forEach((key)=> { %>
                    <option value="<%= key %>">
                        <%= key %>
                    </option>
                    <% }); %>
            </select>
        </div>

        <div class="form-group" id="row-select-container" style="display: none;">
            <label for="row-select">Select Row:</label>
            <select id="row-select">
                <% data.forEach((item, index)=> { %>
                    <option value="<%= index %>">
                        <%= index + 1 %>
                    </option>
                    <% }); %>
            </select>
        </div>

        <div class="form-group" id="formula-select-container" style="display: none;">
            <label for="formula-select">Select Formula:</label>
            <select id="formula-select">
                <option value="SUM">SUM</option>
                <option value="DIFFERENCE">DIFF</option>
            </select>
        </div>

        <div class="form-group" id="result-button-container" style="display: none;">
            <button class="btn" onclick="calculateResult()">Calculate Result</button>
        </div>

        <div class="form-group">
            <a href="/admin/dashboard" class="btn dash">Back to Dashboard</a>
        </div>
    </div>

    <table id="data-table">
        <thead>
            <tr>
                <% Object.keys(data[0]).forEach((key)=> { %>
                    <th>
                        <%= key %>
                    </th>
                    <% }); %>
            </tr>
        </thead>
        <tbody>
            <% data.forEach((item)=> { %>
                <tr>
                    <% Object.values(item).forEach((value)=> { %>
                        <td>
                            <%= value %>
                        </td>
                        <% }); %>
                </tr>
                <% }); %>
        </tbody>
    </table>
    <script>
        const selectOption = document.getElementById('select-option');
        const columnSelectContainer = document.getElementById('column-select-container');
        const rowSelectContainer = document.getElementById('row-select-container');
        const formulaSelectContainer = document.getElementById('formula-select-container');
        const resultButtonContainer = document.getElementById('result-button-container');

        selectOption.addEventListener('change', function () {
            const selectedOption = selectOption.value;

            // Hide all containers
            columnSelectContainer.style.display = 'none';
            rowSelectContainer.style.display = 'none';
            formulaSelectContainer.style.display = 'none';
            resultButtonContainer.style.display = 'none';

            if (selectedOption === 'columns') {
                columnSelectContainer.style.display = 'block';
                formulaSelectContainer.style.display = 'block';
                resultButtonContainer.style.display = 'block';
            } else if (selectedOption === 'rows') {
                rowSelectContainer.style.display = 'block';
                formulaSelectContainer.style.display = 'block';
                resultButtonContainer.style.display = 'block';
            }
        });

    let data = JSON.parse('<%- unescape(JSON.stringify(data)) %>');
    console.log(data);

        function calculateResult() {
            const selectedOption = selectOption.value;
            const columnSelect = document.getElementById('column-select');
            const rowSelect = document.getElementById('row-select');
            const formulaSelect = document.getElementById('formula-select');
            const resultContainer = document.createElement('div');
            resultContainer.className = 'result-container'; // Add a CSS class for styling

            const selectedColumn = columnSelect.value;
            const selectedRow = rowSelect.value;
            const selectedFormula = formulaSelect.value;

            // Calculation for columns
            if (selectedOption === 'columns' && selectedColumn) {
                const columnValues = data.map(item => item[selectedColumn]);

                if (columnValues.length === 0) {
                    const errorMessage = createErrorMessage('Invalid Operation: No values present in the column');
                    resultContainer.appendChild(errorMessage);
                } else {
                    const numbersArray = columnValues.filter(value => typeof value === 'number');
                    console.log(numbersArray);

                    if (numbersArray.length === 0) {
                        const errorMessage = createErrorMessage('Invalid Operation: No numbers present in the column');
                        resultContainer.appendChild(errorMessage);
                    } else {
                        let result;

                        if (selectedFormula === 'SUM') {
                            result = numbersArray.reduce((sum, value) => sum + value, 0);
                        } else if (selectedFormula === 'DIFFERENCE') {
                            result = numbersArray.reduce((diff, value) => diff - value);
                        }

                        const resultMessage = createResultMessage('Result: ' + result);
                        resultContainer.appendChild(resultMessage);
                    }
                }
            }

            // Calculation for rows
            if (selectedOption === 'rows' && selectedRow) {
                const rowValues = Object.values(data[selectedRow]);
                console.log('rowValues', rowValues);

                if (!rowValues) {
                    const errorMessage = createErrorMessage('Invalid Operation: Row does not exist');
                    resultContainer.appendChild(errorMessage);
                } else {
                    const numbersArray = rowValues.filter(value => typeof value === 'number');
                    console.log(numbersArray);

                    if (numbersArray.length === 0) {
                        const errorMessage = createErrorMessage('Invalid Operation: No numbers present in the row');
                        resultContainer.appendChild(errorMessage);
                    } else {
                        let result;

                        if (selectedFormula === 'SUM') {
                            result = numbersArray.reduce((sum, value) => sum + value, 0);
                        } else if (selectedFormula === 'DIFFERENCE') {
                            result = numbersArray.reduce((diff, value) => diff - value);
                        }

                        const resultMessage = createResultMessage('Result: ' + result);
                        resultContainer.appendChild(resultMessage);
                    }
                }
            }

            // Remove previous result element from the body
            const previousResultContainer = document.querySelector('.result-container');
            if (previousResultContainer) {
                previousResultContainer.remove();
            }

            // Append the new result container to the body
            document.body.appendChild(resultContainer);
        }

        function createErrorMessage(message) {
            const errorMessage = document.createElement('p');
            errorMessage.textContent = message;
            errorMessage.className = 'error-message'; // Add a CSS class for styling
            return errorMessage;
        }

        function createResultMessage(message) {
            const resultMessage = document.createElement('p');
            resultMessage.textContent = message;
            resultMessage.className = 'result-message'; // Add a CSS class for styling
            return resultMessage;
        }

    </script>
</body>

</html>